services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    build: .
#    image: keycloak/keycloak
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - KC_LOG_LEVEL
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
      - KC_HOSTNAME_STRICT_HTTPS
      - KC_HEALTH_ENABLED
      - KC_METRICS_ENABLED
      - KC_HTTP_MANAGEMENT_ENABLED
      - KC_HTTP_MANAGEMENT_HOST
      - KC_HTTP_MANAGEMENT_PORT

    #      - JAVA_OPTS="-agentlib:jdwp=transport=dt_socket,address=*:8787,server=y,suspend=n"
    container_name: keycloak
    entrypoint: /opt/keycloak/bin/kc.sh start-dev --http-enabled=true --cache=local
    ports:
      - "8080:8080"
    healthcheck:
#      test: [ "CMD-SHELL", "curl -f http://keycloak:8080/ || exit 1" ]
#      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:${KC_HTTP_MANAGEMENT_PORT:?}/management/health/ready || exit 1"]
      test: [
        "CMD-SHELL",
        "exec 3<>/dev/tcp/localhost/${KC_HTTP_MANAGEMENT_PORT:?}; \
        echo -en 'GET /health/ready' >&3; \
        # Give the server a moment to respond, then search for 'UP'
        if timeout 3 cat <&3 | grep -m 1 'UP'; then \
          exec 3<&-; exec 3>&-; exit 0; \
        else \
          exec 3<&-; exec 3>&-; exit 1; \
        fi"
      ]
      interval: 10s
      timeout: 10s
      retries: 20
      start_period: 10s

  keycloak-java-configuration:
    image: openjdk:21
    volumes:
      - ./java-configuration/target/java-configuration.jar:/jars/java-configuration.jar
    environment:
      - KEYCLOAK_ADMIN
      - KEYCLOAK_ADMIN_PASSWORD
      - KEYCLOAK_CONFIG_SERVER_URI
      - KEYCLOAK_CONFIG_REALM
      - KEYCLOAK_ALLOWED_IP_ADDRESS
    working_dir: /jars
    command: java -Dkeycloak.server=${KEYCLOAK_CONFIG_SERVER_URI} -Dkeycloak.realm=${KEYCLOAK_CONFIG_REALM} -Dkeycloak.user=${KEYCLOAK_ADMIN} -Dkeycloak.password=${KEYCLOAK_ADMIN_PASSWORD} -jar java-configuration.jar
    #    Uncomment if you want to enable debug mode, in IntelliJ Run Configurations add a Remote JVM Debug execution on port 5005
    #    command: /bin/bash -c "java -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:5005 -Dkeycloak.server=$${KEYCLOAK_CONFIG_SERVER_URI} -Dkeycloak.realm=master -Dkeycloak.user=$${KEYCLOAK_ADMIN} -Dkeycloak.password=$${KEYCLOAK_ADMIN_PASSWORD} -jar java-configuration.jar"
    ports:
      - "5005:5005"
    depends_on:
      keycloak:
        condition: service_healthy